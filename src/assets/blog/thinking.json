{
  "title": "To Think, To Learn, To Do",
  "subtitle": "Automation and Society's Future",
  "date": "November 1, 2018",
  "content": "Most human life and purpose is centered around doing; we need to do to live. To do, one needs to know; to know, one needs to learn; and to learn, you need to think. Perhaps this helps characterize much of social hierarchies and human preferences; for laborers have traditionally been at the bottom of society, with thinkers (poets, authors, writers, politicians (?)) at the top. Most who are afforded the opportunity to think prefer to do it; certainly I, right now, am thinking and writing rather than doing something productive. \n\nThat's why others theorize that AI and an automated society will simply lead to more creatives and thinkers in the world; the logic follows, doesn't it? If the only reason people aren't thinkers is that they're doers, then if we make computers do everything more people can think! That said, I don't think it's that simple, because doing is not simply laboring; it's making the most of your knowledge and skills, something that everyone at every tier of every hierarchy needs to do to some extent or another.\n\nLiberal arts or art majors are mocked, at least among STEM circles; why? Because they are thinkers who do not do; they just think, and expect to be treated and sustained at the same level as those that do things. But that's not the reality; people need to do, as well as think (except a privileged and fortunate few whose creative endeavors can guide populations; we call them \"authors\"). \n\nSo there are two types of thinking, in effect: thinking abstractly, and thinking about doing. Most computer scientists and businesspeople, like me, fall firmly in the latter category; we think in depth and at length, but think about application and are able to later apply our thoughts meaningfully.\n\nOf course, for that to work, you have to do stuff; you have to apply thoughts. It's an optimization problem, at the end of the day: if you spend too much time optimizing, you won't do enough... yet if you just mindlessly do, it might be inefficient and you may be wasting time. \n\nIf I wanted to be an academic, thinking for life and means, it'd be fine; that's a path. But I don't; I want to be a businessperson, someone who actually goes out and does and changes things. Hence, just thinking won't do; I also need to act.\n\nThere's a third variable though, that of learning. It's a form of doing; not too significant, generally, but it teaches you how to be a significant doer. I can't program unless I learn a language and practice with a project; I can't go out and run a business unless I understand how businesses work; I can't design a bridge until I have learned the engineering principles behind making them sturdy and safe. Learning and practice of certain skills, then, are a middle ground; they're not actually application yet, but are still a form of productivity (especially basic practice projects). One must learn before doing; yet learning itself is a form of doing (in that it is productive and not abstract or efficiency-focused (it teaches new tasks, not improvement on the same task)).\n\nBasic skillset learning should be lumped, then, right? As a programmer, I should learn everything really fast so that I can go out and do, right? I'm not sure, because collegiate training covers many bases. If I'm only doing specific things in the future, is there really a need to understand other areas in depth? Sure, I might want to for fun, but do I need to? No, I don't. If I can find that one thing to do, dropping out to pursue it is a legitimate option - because why learn about intricacies of processor design if you can be a successful web developer at the same time? That's how I see it, at least.\n\nTo be most efficient, learn what you need, then start doing so that you can stop being mandated to learn. Learning, of course, is beautiful and fun; that said, it's not necessary, and with operational freedom it can come on your terms in the future; what you want, when you want it, to the end you desire. Hence, learning languages and frameworks constantly these last few weeks and months has been valuable; but it will only be valuable as a head-start if I apply it quickly and meaningfully. Otherwise, as time goes on, others will learn too and duly catch up! Then, will this stress over efficiency have been worthwhile?\n\nNo, efficiency or a lead only gives an advantage if you do one of two things with it: either use it to extend itself, giving you a greater lead; or use it to do something, jumping into industry or productivity sooner and more readily than others can or will. The first option must clearly lead into the second at some point (for most cases); hence, the ultimate goal of self-spurred advancement is to translate it into positional or experience-based advantage. Indeed, if compounded enough -- that is, if your lead is used to get a greater lead, and that to get a greater lead, and so on -- being ahead will allow you to get to places others never even approach or come close to. Having a lead enables you to either seek abnormally rich and deep expertise in a field, general expertise in many fields, or to gain your general expertise and start doing things with it a lot sooner. In a university, these options take the form of pursuing honorific study, getting multiple degrees or majors, or graduating early or dropping out for business, respectively.\n\nI prefer the latter the most; however, I'm also banking on my lead being significant enough to bundle in the second option too -- to pursue entrepreneurship as well as CS, both to such a strong level that I can create a company integrated with computer science in the future. However, the future is not absolute in its form; I may see the opportunity to do so arise sooner than I may expect -- indeed, I believe that I should seek ways to force it to come sooner -- in which case I should seize on that opportunity and not frivolously let it go. Being such a unique type of opportunity, though, it will not come unless I seek it; hence, seeking is the safety route. Does that logic follow, or am I being overconfident and trying to post-hoc justify (or formalize the logic behind, however you see it) a conclusion I've already made?"
}